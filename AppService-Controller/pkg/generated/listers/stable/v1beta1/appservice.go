/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "operators/AppService-Controller/pkg/apis/stable/v1beta1"

	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// AppServiceLister helps list AppServices.
// All objects returned here must be treated as read-only.
type AppServiceLister interface {
	// List lists all AppServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AppService, err error)
	// AppServices returns an object that can list and get AppServices.
	AppServices(namespace string) AppServiceNamespaceLister
	AppServiceListerExpansion
}

// appServiceLister implements the AppServiceLister interface.
type appServiceLister struct {
	listers.ResourceIndexer[*v1beta1.AppService]
}

// NewAppServiceLister returns a new AppServiceLister.
func NewAppServiceLister(indexer cache.Indexer) AppServiceLister {
	return &appServiceLister{listers.New[*v1beta1.AppService](indexer, v1beta1.Resource("appservice"))}
}

// AppServices returns an object that can list and get AppServices.
func (s *appServiceLister) AppServices(namespace string) AppServiceNamespaceLister {
	return appServiceNamespaceLister{listers.NewNamespaced[*v1beta1.AppService](s.ResourceIndexer, namespace)}
}

// AppServiceNamespaceLister helps list and get AppServices.
// All objects returned here must be treated as read-only.
type AppServiceNamespaceLister interface {
	// List lists all AppServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AppService, err error)
	// Get retrieves the AppService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.AppService, error)
	AppServiceNamespaceListerExpansion
}

// appServiceNamespaceLister implements the AppServiceNamespaceLister
// interface.
type appServiceNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.AppService]
}
